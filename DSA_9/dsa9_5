5. Rahul canâ€™t stand when two same things are placed adjacent to each other. He now has a string and wants
that every adjacent pair of characters are different. Before going to begin the task he needs to know if it is at
all possible with a given string by exchanging the characters of the string. Help Rahul with this task
Sample Input 1 -
bbbbb
Sample Output 1 -
Not Possible
Sample Input 2 -
aabababbb
Sample Output 2 -
Possible
******************************************************************************
#include<stdio.h>
#define n 52
#include <string.h>
void swap(int* a,int* b){int temp = *a; *a = *b; *b = temp;}
void sort(int a[]){
    for(int i=0;i<n-1;i++){
        for(int j=i+1;j<n;j++){
            if(a[i] < a[j]){ 
                swap(&a[i],&a[j]);
            }
        }
    } 
}
int main(){
    char s[10000];
    scanf("%s",s);
    int count[n] = {0};
    for(int i=0 ; i<strlen(s) ; i++){
        if(s[i] >= 'a'){
            count[s[i]-'a']++;
        }
        else{
            count[s[i]-'A' + 26]++;
        }
    }
    sort(count);
    for(int i=n-1;i>=0;i--){
        /* coz, count[i] will be changing so store the initial value */
        int x = count[i];     
        /* decrease only if this  is not the only letter left coz you'll be 
           subtracting itself otherwise (ex: 5 0 0 ... will become 0 0 0 ...) */
        if(count[1] != 0 && x!=0){   
            for(int j=i;j>=0;j--){               
                count[j] -= x;
            }
        }   
    }
    /*to check for 1st element.
      if only a single letter occurs more than once*/
    if(count[0] > 1){     
        printf("impossible\n");
        return 0; 
    } 
    /*to check for the rest.
      there shouldn't be any non-zero element present*/
    for(int i=1;i<n;i++){
        if(count[i] != 0){
            printf("impossible\n");
            return 0;  
        }
    }
    printf("possible\n");
    return 0;
}

