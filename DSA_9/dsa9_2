2. Alexa has two stacks of non-negative integers, stack A and stack B where index denotes the top of the stack.
Alexa challenges Nick to play the following game:
i. In each move, Nick can remove one integer from the top of either stack A or stack B.
ii. Nick keeps a running sum of the integers he removes from the two stacks.
iii. Nick is disqualified from the game if, at any point, his running sum becomes greater than some integer x
given at the beginning of the game.
iv. Nick's final score is the total number of integers he has removed from the two stacks.
Given A, B and x, find the maximum possible score Nick can achieve (i.e., the maximum number of integers
he can remove without being disqualified).
Input -
The first line contains three space-separated integers describing the respective values of n (the number of
integers in stack A), m (the number of integers in stack B), and x (the number that the sum of the integers
removed from the two stacks cannot exceed).
The second line contains n space-separated integers describing the respective values of A.
The third line contains m space-separated integers describing the respective values of B.
Output
Print an integer on a new line denoting the maximum possible score Nick can achieve without being
disqualified.
ExampleInput5 4 10
4 2 4 6 1 (Note the left most element represents the top of the stack.)
2 1 8 5 (Note the left most element represents the top of the stack.)
Output 4
*******************************************************************************************

#include <stdio.h>
#define N 100000
int main(){
    int c, i, m, n, x;
    int A[N], B[N];
        scanf("%d%d%d", &n, &m, &x);
        scanf("%d", &A[1]);
        for (i = 2; i<=n ; i++) {
            scanf("%d", &A[i]);
            A[i] += A[i - 1];
        }
        scanf("%d", &B[1]);
        for (i = 2; i<=m ; i++) {
            scanf("%d", &B[i]);
            B[i] += B[i - 1];
        }
        int a = 1, b = 1;
        while (a <= n && A[a] <= x){
            a++;
        }
        a--;
        c = a;
        while(b <= m && B[b] <= x){
            if(a>0 && B[b] + A[a] > x){
                a--;
            }
            else{
                if(c < a+b)
                    c = a+b;
                b++;
            }
        }
        printf("%d\n", c);
    return 0;
}
/*
5 4 10
4 2 4 6 1
2 1 8 5
 * ans : 4
 * 
5 4 11
2 4 2 1 2
4 2 1 3
 * ans : 5
 * 
5 4 11
2 4 2 1 3
4 2 1 2
 * ans : 5
 * 
4 5 10
3 4 100 1
5 1 1 1 1
 * ans : 5
 */
