2. Naruto and Sasuke are given two arrays A1 and A2 of size N and M respectively. Since they are in a team,
they need to be in sync. Kakashi, as their Sensei, decided to sort A1 in such a way that the relative of the
elements will be same as that in A2. If there are some elements left in A2, their friend Sakura will append 
them at last in sorted order. It is also given that the number of elements in A2 is smaller than or equal to
number of elements in A1 and A2 has all distinct elements. A1 can have duplicate elements. Moreover, A2
can have a few elements which are not present in A1.
Input:
N M
A1
A2
Output:
The final array.
Constraints:
1 ≤ N, M ≤ 106
|A1|<= 106, |A2| <= 106
Example:
Input:
11 4
2 1 2 5 7 1 9 3 6 8 8
2 1 8 3
Output:
2 2 1 1 8 8 3 5 6 7 9
Input:
10 5
3 1 4 6 2 1 8 5 3 6
6 1 7 9 8
Output:
6 6 1 1 8 2 3 3 4 5
**********************************************************************************************8

#include<stdio.h>
void sortarr(int a[],int n){
    for(int i=0;i<n;i++){
        for(int j=i+1;j<n;j++){
            if(a[i]>a[j]){
                int temp = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
        }
    }
}
int main(){
    int n1,n2,k=0;
    scanf("%d%d",&n1,&n2);
    int arr1[n1],arr2[n2],arr[n1],visited1[n1];
    for(int i=0;i<n1;i++){
        scanf("%d",&arr1[i]);
        visited1[i]=0;
    }
    for(int i=0;i<n2;i++){
        scanf("%d",&arr2[i]);
    }
    sortarr(arr1,n1);
    for(int i=0;i<n2;i++){
        for(int j=0;j<n1;j++){
            if(arr2[i]==arr1[j] && !visited1[j]){
                arr[k++]=arr1[j];
                visited1[j]=1;
            }
        }
    }
    for(int i=0;i<n1;i++)
        if(!visited1[i])
            arr[k++]=arr1[i];
    for(int i=0;i<n1;i++)
        printf("%d ",arr[i]);
    return 0;
}
