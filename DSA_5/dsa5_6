6. You are given an unsorted array a. You have to find out all the unordered pairs in the array. An unordered
pair is defined as a pair (a[i], a[j]), such that i < j but a[i] > a[j]. For example, if the array a contains 2, 3, 1, 4,
then the unordered pairs are (2, 1) and (3, 1).
Input:
The first line contains n (the size of the array).
The second line contains n different integers as elements of a.
Output:
The number of unordered pairs in less than O(n
2
) time.
Example:
Input:
5
2 4 1 3 5
Output:
3
**************************************************************************************

#include<stdio.h>
int ans=0;
void merge(int a[],int s1,int e1,int s2,int e2){
    int aux[e2-s1];
    int  cnt=0 , k=s1;
    while(s1<=e1 && s2<=e2){
        if(a[s1]<=a[s2])
            aux[cnt++]=a[s1++];
        else{
            aux[cnt++] = a[s2++];
            ans += (e1-s1+1);
        }
    }
    while(s1<=e1){ 
        aux[cnt++] = a[s1++];
    }
    while(s2<=e2){ 
        aux[cnt++] = a[s2++];
    }
    for(int i=0;i<cnt;i++)
        a[i+k] = aux[i];
}
void sortarr(int a[],int s,int e){
    if(s<e){
        int mid = (s + (e-s)/2);
        sortarr(a,s,mid);
        sortarr(a,mid+1,e);
        merge(a,s,mid,mid+1,e);
    }
}
int main(){
    int n;
    scanf("%d",&n);
    int end = n-1;
    int arr[n];
    for(int i=0;i<n;i++)
        scanf("%d",&arr[i]);
    sortarr(arr,0,end);
    for(int i=0;i<n;i++)
        printf("%d ",arr[i]);
    printf("\nanswer is : %d",ans);
    return 0;
}
