9. You are performing a Physics experiment. You have recorded n measurements in your notebook. After
that, you remembered that the largest and the smallest measurements should differ by more than two
times. However, you do not have enough time to record all the measurements and want to somehow
manage with the n measurements that you have. You will erase some of the recorded measurements, so as
to make the largest and the smallest results of the remaining measurements differ in no more than two
times. In other words, if the remaining measurements (after removal) have the smallest value x, and the
largest value y, then the inequality y ≤ 2·x must be fulfilled. Also, the largest and the smallest measurements
should appear only once in the measurement set. If that is not the case with your recorded set of
measurements, you will have to ensure that as well. Of course, to avoid the teacher's suspicion, you want to
remove the minimum number of measurements.
Input:
First line contains n, the size of array.
The second line contains n integers c1, c2, ..., cn (1 ≤ ci ≤ 5000) — the recorded measurements.
Output:
Print a single integer — the minimum number of measurements you will have to remove
Example:
Input:
6
4 5 3 8 3 7 8
Output:
3
Explanation: Two 3 and one 8 is removed. Now the largest is 8 and the smallest is 4.

************************************************************************************************************
#include<stdio.h>
#define minof(a,b) a>b ? b : a
int ans=0;
void sortarr(int a[],int n){
    for(int i=0;i<n;i++){
        for(int j=i+1;j<n;j++){
            if(a[i]>a[j]){
                int temp = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
        }
    }
}
void minmax(int a[],int l,int r,int* min,int* max){
        *min = a[l]; *max=a[l];
        for(int j=l+1;j<=r;j++){
            if(*min > a[j])
                *min = a[j];
            else if(*max < a[j])
                *max = a[j];
        }
}
int norepeat(int a[],int l,int r,int max,int min){
    int u=1,v=1;
    for(int i=l;i<r;i++){
        if(max = a[i])
            if(u)
                continue;
            else
                return 0;
        if(min = a[i])
            if(v)
                continue;
            else
                return 0;             
    }
}
int calculate(int a[],int l,int r){
    int min,max,p=0,q=0;
    minmax(a,l,r,&min,&max);
    if(l >= r)
        return ans;
    if(max <= 2*min && norepeat(a,l,r,max,min)){
        return ans;
    }
    p = calculate(a,l+1,r);
    q = calculate(a,l,r-1); 
    ans = minof(p,q)+1;
}  
int main(){
    int n;
    scanf("%d",&n);
    int arr[n];
    for(int i=0;i<n;i++)
        scanf("%d",&arr[i]);
    sortarr(arr,n);
    calculate(arr,0,n-1);
    printf("%d",ans);
}
