5. Klay Thompson is one the best 3-pointer shooters in the history of NBA. He is so much obsessed with the
number 3 that his team mates gave him a task. They gave him an array of numbers 0-9 (not necessarily
containing all the 10 digits and not necessarily containing only unique digits in sorted order) and asked him
to come up with the largest number that is divisible by 3 using these digits. If no such number is possible, he
will have to say “No such number”. The number of digits present in the output can vary between 1 and the
size of the array. You are allowed to use any element of the input array only once.
Input:
The first line contains the size of the array.
The second line contains the elements of the array.
Output:
The largest number divisible by 3.
Example
Input:
5
5 4 3 1 1
Output:
4311 
Explanation : (Not possible to construct a number divisible by 3 consisting of all the 5 digits. You cannot create a
number consisting of more than one 3 or 4 since these digits are only present once in the input array.
However, 1 is present twice in the output since the input array contained two 1s.)
Input:
5
0 5 5 5 7
Output:
5550 
Explanation : (Not possible to construct a number divisible by 3 consisting of all the 5 digits. Also, you cannot use
more than three 5s.)

***********************************************************************************************************************
#include<stdio.h>
void swap(int* a,int* b){int temp=*a ; *a=*b ; *b=temp;}
void sortarr(int a[],int n){
    for(int i=0;i<n;i++){
        for(int j=i+1;j<n;j++){
            if(a[i]<a[j]){
                swap(&a[i],&a[j]);
            }
        }
    }
}
int main(){
    int n,sum=0,end,k=0;
    scanf("%d",&n);
    end = n-1;
    int arr[n]={},ans[n]={};
    for(int i=0;i<n;i++){
        scanf("%d",&arr[i]);
        sum += arr[i];
    }
    sortarr(arr,n);
    int y = sum%3;
    printf("remainder is : %d\n",sum%3);
    if(y == 0){        //if remainder is 1 or 2
        for(int i=0;i<n;i++)
            printf("%d ",arr[i]);
        printf("\n");
        return 0;
    }
    else if(y != 0){    //if remainder is 1 or 2                      
        int cnt = 1;          // first element which has the same remainder remove it 
        printf("removing %d elements with remainder = %d \n",cnt,y);
        for(int i=end;i>=0;i--){
            if(arr[i]%3 == y && cnt){
                cnt--;
                continue;
            }
            else
                ans[k++]=arr[i];
        }
        if(cnt!=0){           // if there is no element which has a same remainder as y 
            y = 3-y;          // subtract it from 3 ( could be one or two)
            cnt = 2;          // first 2 minimal elements which has the same remainder remove them 
            k=0;
            printf("removing %d elements with remainder = %d \n",cnt,y);
            for(int i=end;i>=0;i--){
                if(arr[i]%3==y && cnt){
                    cnt--;
                    continue;
                }
                else
                    ans[k++]=arr[i];
            }
        }
        if(cnt==0){
          for(int i=k-1;i>=0;i--)
              printf("%d",ans[i]);
          return 0;
        }
        printf("-1");
    }
    return 0;
}
