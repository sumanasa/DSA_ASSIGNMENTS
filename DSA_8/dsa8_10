10. Zolo is stuck in a traffic due to dysfunctional traffic light. Zolo is a professional hacker and he can get into
the system and change the state of the light. His planet has different types of traffic lights such that there are N
bulbs on the traffic board and only when all of them are green(G) the cars can pass. There are 2 other states
also which the bulb can show - Red(R) & Yellow(Y). Note that the lights are designed such that they follow a
state change cyclic pattern as follows:
 R------>Y------>G------->R
Once Zolo gets into the system he can select any position i and update all elements between i to min(N, i + K
- 1) by increasing their state by 1.This whole process takes 1 sec and he can repeat this process any number
of times until he gets all lights = G . Find the minimum time to do the process as Zolo is getting late for work.
Input:
The first line contains N K
The second line describes the current status of each bulb as an array whose each element can either be G or
Y or R
Output:
The minimum amount of time required to clear the traffic jam.
Constraints:
1<=N, K<=100000
Example:
Input:
4 2
R Y G Y
Output:
5
*********************************************************************************
#include<stdio.h>
int n, k;
int arr[100005];
int temp[100005];//plus
int answer = 0;
int sum = 0;//plus
int a = 0; //head
int b = 0; //tail
int main() {
    scanf("%d %d", &n, &k);
    for (int i = 1; i <= n; i++){
        char bulb;
        scanf(" %c", &bulb);
        if (bulb == 'G') arr[i] = 0;
        if (bulb == 'R') arr[i] = 1;
        if (bulb == 'Y') arr[i] = 2;
    } 
    for (int i = 1; i<=n; i++){
        arr[i] += sum;
        if ((arr[i] + 1) % 3 == 0){
                temp[b++] = 1;
                answer+=1;
                sum+=1;
        }
        else if ((arr[i] + 2) % 3 == 0){
                temp[b++] = 2;
                answer += 2;
                sum += 2;
        }
        else temp[b++] = 0;
        if (i >= k) sum = sum-temp[a++];
    }
    printf("%d\n", answer);
    return 0;
}
