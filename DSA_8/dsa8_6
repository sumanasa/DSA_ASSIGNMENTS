6. Design a stack that supports push, pop, and retrieving the minimum element in constant time. Make it a
menu-driven program where the 3 operations can be done any number of times. The user will be prompted to
enter the type of operation and the associated data value.
***********************************************************************************************
#include<stdio.h>
#include <limits.h>
int arr[1000],min = INT_MAX , top = -1;
void pop(){
    if(top>=0)
        printf("POP : %d\n",(arr[top--]));
    else printf("empty\n");
}
void push(int n){
    arr[++top]=n;
    if(min>n)
        min=n;
}
int main(){
    int x = 1 , a;
    while(x!=0){
        scanf("%d",&x);
        switch(x){
            case 1:
                scanf("%d",&a);
                push(a);
                break;
            case 2:
                pop();
                break;
            case 3:
                if(top>=0)
                    printf("MIN : %d\n",min);
                else
                    printf("empty\n");
                break;
            case 0:
                return 0;
            default:
                printf("INVALID\n");
        }
    }
    return 0;
}
