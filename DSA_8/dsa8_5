5. Given an array of digits (values are from 0 to 9), find the minimum possible sum of two positive numbers
formed from digits of the array. All digits of given array must be used to form the two numbers.
Input:
A single containing the digits separated by space.
Output:
The sum.
Example:
Input:
6 8 4 5 2 3
Output:
604
Explanation:
The minimum sum is formed by numbers 358 and 246.
Input:
9 6 8 4 5 2 3 1
Output:
3827
Input:
6 8 4 5 2 3 1
Output:
1604
******************************************************************************************
#include<stdio.h>
#include<math.h>
int n=0,arr[1000];
void swap(int* a, int* b){int temp = *a ; *a = *b ; *b = temp;}
int sort(){
    for(int i=0;i<n-1;i++){
        for(int j=i+1;j<n;j++){
            if(arr[i] < arr[j])
                swap(&arr[i] , &arr[j]);
        }
    }
}
int main(){
    int x,sum=0;
    char ch;
    while(scanf("%d",&x)){
        arr[n++] = x;
        scanf("%c",&ch);
        if(ch != ' ')
            break;
    }
    for(int i=0 ; i < n ; i++){
        printf("%d ",arr[i]);
    }
    printf("\n");
    sort();
    for(int i=0 ; i < n ; i++){
        printf("%d ",arr[i]);
    }
    printf("\n");
    int i=0,k=0;
    for(i=0 ; i < n-1 ; i+=2){  
        sum += (arr[i] + arr[i+1]) * pow(10,k);
        k++;
        printf("%d\n",sum);
    }
    if(n%2){
        sum += pow(10,k) * arr[i];
    }
    printf("%d\n",sum);
}
