8. Given an undirected graph, find the total number of nodes connected at t distance away from each other. For example: Two nodes directly
connected are at 1 distance connectivity. While the two nodes having a common node between each other without having direct connectivity
are at 2 distance connectivity.   
First line of input contains n (number of nodes) and second line of input contains e (number of edges). Next e lines will contain two 
integers u and v meaning that node u and v are connected to each other in undirected fashion. Next line contains the input t. The output 
should display the total number of nodes connected at t distance away from each other.  
********************************************************************************************************************************

#include <stdio.h>
int n,e,graph[1000][1000];
int copy[1000][1000];
#define inf 99999
int main()
{
    scanf("%d %d",&n,&e);
       for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            graph[i][j]=0;
            copy[i][j]=inf;
           
           //diff from q7
           if(i==j)
            {
                copy[i][j]=0;
            }
            
            }
        }
    
    for(int i=0;i<e;i++)
    {
        int u,v;
        scanf("%d %d",&u,&v);
        graph[u][v]=1;
        graph[v][u]=1;
        copy[u][v]=1;
        copy[v][u]=1;
    }
  //floyd warshall
    for(int k=0;k<n;k++)
    {
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(copy[i][j]>copy[i][k]+copy[k][j])
                {
                    copy[i][j]=copy[i][k]+copy[k][j];
                }
            }
        }
    }
    int t;
    scanf("%d",&t);
   
  int ans;
  for(int i=0;i<n;i++)
  {
      for(int j=0;j<n;j++)
      {
          if(copy[i][j]==t)
          {
              ans++;
           
              copy[j][i]=inf;
              printf("%d and %d\n",i,j);
          }
      }
  }
    printf("%d",ans);
}
